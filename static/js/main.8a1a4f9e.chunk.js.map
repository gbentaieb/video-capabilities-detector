{"version":3,"sources":["ui/constants/actionTypes.js","ui/reducers/drm.js","ui/reducers/maxBandwidth.js","ui/reducers/browser.js","ui/store/index.js","ui/utils/maxBandwidth.js","ui/utils/browser.js","ui/components/presentationals/Table.jsx","ui/components/containers/Table.jsx","ui/utils/drm.js","ui/components/presentationals/DrmDetector.jsx","ui/components/containers/DrmDetector.jsx","ui/actions/drmActions.js","ui/components/presentationals/MaxBandwidthDetector.jsx","ui/components/containers/MaxBandwidthDetector.jsx","ui/actions/maxBandwidthActions.js","ui/components/presentationals/BrowserDetector.jsx","ui/components/containers/BrowserDetector.jsx","ui/actions/browserActions.js","App.js","serviceWorker.js","index.js"],"names":["SET_DRM_PROPERTIES","SET_MAX_BANDWIDTH","SET_BROWSER_PROPERTIES","initialState","drmName","drmSecurity","hdcpLevel","drmCanPersistState","drmReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","protectedContent","unprotectedContent","maxBandwidthReducer","name","version","os","recommended","supportedCodecs","reducer","combineReducers","reducers","store","createStore","getMaxBandwidthDisplayedValue","maxBandwidth","concat","BROWSER","detect","CODECS","avc","hevc","vp8","vp9","av1","getBrowserProperties","_ref","split","getRecommendedBrowser","videoElement","document","createElement","canPlayType","keys","reduce","codecs","codecName","join","getBrowserSupportedCodecs","CustomTableCell","withStyles","theme","head","backgroundColor","palette","primary","light","color","common","white","body","fontSize","TableCell","id","createData","value","getRows","data","unprotectedContentMaxBandwidth","protectedContentMaxBandwidth","recommendedBrowser","root","marginTop","spacing","unit","marginLeft","marginRight","overflowX","table","width","row","&:nth-of-type(odd)","background","default","props","classes","rows","react_default","a","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableBody_default","map","key","component","scope","connect","drm","browser","presentationals_Table","PLAYREADY_DRM_MIME_TYPES","WIDEVINE_ROBUSTNESSES","HDCP_LEVELS","FALLBACK_DRM_INFOS","requestMediaKeySystemAccess","_x","_x2","_requestMediaKeySystemAccess","apply","this","_callee","drmMimeType","config","regenerator_default","wrap","_context","prev","next","navigator","abrupt","sent","t0","stop","getHdcpLevelFromMediaKeys","_x3","_getHdcpLevelFromMediaKeys","_callee2","mediaKeys","i","_context2","getStatusForPolicy","minHdcpVersion","console","warn","getHdcpLevelFromMSMediaKeys","_getHdcpLevelFromMSMediaKeys","_callee3","_context3","window","MSMediaKeys","isTypeSupportedWithFeatures","getCencKeySystemConfigurations","videoCapabilities","audioCapabilities","getDRMRobustnesses","forEach","robustness","push","contentType","initDataTypes","persistentState","extractWidevineDrmInfoFromCapabilities","capabilities","getWidevineCapabilites","_getWidevineCapabilites","_callee4","ksAccess","_context4","createMediaKeys","getConfiguration","getPlayreadyCapabilities","_getPlayreadyCapabilities","_callee5","hdcpLevelFromMSMediaKeys","_context5","keySystem","getFairplayInfos","_getFairplayInfos","_callee6","MK","_context6","WebKitMediaKeys","isTypeSupported","getCencInfos","_getCencInfos","_callee7","_ref2","playreadyCapabilities","widevineCapabilities","_context7","Promise","all","slicedToArray","includes","getDrmInfos","_getDrmInfos","_callee8","fairplayInfos","_context8","DrmDetector","detectDrmProperties","setDrmProperties","Component","presentationals_DrmDetector","MaxBandwidthDetector","nextProps","_this$props","getMaxBandwidth","setMaxBandwidth","getPlayreadyProtectedContentMaxBandwidth","_hdcpLevel$split","_hdcpLevel$split2","hdcpMajorLevel","hdcpMinorLevel","presentationals_MaxBandwidthDetector","BrowserDetector","detectBrowserProperties","properties","setBrowserProperties","presentationals_BrowserDetector","App","typography","es","AppBar_default","position","Toolbar_default","Typography_default","variant","containers_Table","containers_DrmDetector","containers_MaxBandwidthDetector","containers_BrowserDetector","margin","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a1a4f9e.chunk.js","sourcesContent":["export const SET_DRM_PROPERTIES = 'SET_DRM_PROPERTIES';\nexport const SET_MAX_BANDWIDTH = 'SET_MAX_BANDWIDTH';\nexport const SET_BROWSER_PROPERTIES = 'SET_BROWSER_PROPERTIES';","import { SET_DRM_PROPERTIES } from '../constants/actionTypes';\n\nconst initialState = {\n  drmName: null,\n  drmSecurity: null,\n  hdcpLevel: null,\n  drmCanPersistState: null,\n};\n\nexport default function drmReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_DRM_PROPERTIES:\n      return {\n        ...state,\n        drmName: action.payload.drmName,\n        drmSecurity: action.payload.drmSecurity,\n        hdcpLevel: action.payload.hdcpLevel,\n        drmCanPersistState: action.payload.drmCanPersistState,\n      };\n    default:\n      return state;\n  }\n}","import { SET_MAX_BANDWIDTH } from '../constants/actionTypes';\n\nconst initialState = {\n  protectedContent: null,\n  unprotectedContent: null\n};\n\nexport default function maxBandwidthReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_MAX_BANDWIDTH:\n      return {\n        ...state,\n        protectedContent: action.payload.protectedContent,\n        unprotectedContent: action.payload.unprotectedContent,\n      };\n    default:\n      return state;\n  }\n}","import { SET_BROWSER_PROPERTIES } from '../constants/actionTypes';\n\nconst initialState = {\n  name: null,\n  version: null,\n  os: null,\n  recommended: null,\n  supportedCodecs: null,\n};\n\nexport default function drmReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_BROWSER_PROPERTIES:\n      return {\n        ...state,\n        name: action.payload.name,\n        version: action.payload.version,\n        os: action.payload.os,\n        recommended: action.payload.recommended,\n        supportedCodecs: action.payload.supportedCodecs,\n      };\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers } from 'redux';\n\nimport * as reducers from '../reducers';\n\nconst initialState = {};\nconst reducer = combineReducers(reducers);\nconst store = createStore(\n  reducer,\n  initialState,\n);\n\nexport default store;","export function getMaxBandwidthDisplayedValue(maxBandwidth) {\n  switch (maxBandwidth) {\n    case null:\n      return null;\n    case 'none':\n      return 'Not supported';\n    default:\n      return `Up to ${maxBandwidth}`;\n  }\n}","import { detect } from 'detect-browser';\n\nconst BROWSER = detect();\nconst CODECS = {\n  avc: 'video/mp4; codecs=\"avc1\"',\n  hevc: 'video/mp4; codecs=\"hvc1\"',\n  vp8: 'video/mp4; codecs=\"vp08\"',\n  vp9: 'video/mp4; codecs=\"vp09.00.50.08\"',\n  av1: 'video/mp4; codecs=\"av01.0.08M.08\"',\n}\n\nexport function getRecommendedBrowser(os) {\n  const mainOsName = os ? os.split(' ')[0] : null;\n\n  switch (mainOsName) {\n    case 'iOS':\n    case 'Mac':\n      return 'Safari';\n    case 'Windows':\n      return 'Edge';\n    case 'Linux':\n      return 'Firefox';\n    default:\n      return 'Chrome';\n  }\n}\n\nexport function getBrowserSupportedCodecs() {\n  const videoElement = document.createElement('video');\n  if (!videoElement.canPlayType) return 'none';\n\n  const supportedCodecs = Object.keys(CODECS).reduce((codecs, codecName) =>\n    videoElement.canPlayType(CODECS[codecName])\n      ? codecs.concat([codecName])\n      : codecs\n  , []);\n\n  return supportedCodecs.join(', ');\n}\n\nexport function getSupportedCodecsDisplayedValue(codecs) {\n  if (codecs === 'none') return 'Unable to detect'\n\n  return codecs;\n}\n\nexport function getBrowserProperties() {\n  const { name, version, os } = BROWSER || {};\n\n  return {\n    name,\n    version,\n    os,\n    recommended: getRecommendedBrowser(BROWSER.os),\n    supportedCodecs: getBrowserSupportedCodecs(),\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { getMaxBandwidthDisplayedValue } from '../../utils/maxBandwidth';\nimport { getSupportedCodecsDisplayedValue } from '../../utils/browser';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: 5,\n    marginRight: 5,\n    overflowX: 'auto',\n  },\n  table: {\n    width: '100%',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, value) {\n  id += 1;\n  return { id, name, value };\n}\n\nconst getRows = (data) => [\n  createData('Drm Name', data.drmName),\n  createData('Drm Security', data.drmSecurity),\n  createData('Supported HDCP level', data.hdcpLevel),\n  createData('Persistent state enabled (can be used for tracking purposes)', data.drmCanPersistState),\n  createData(\n    'Supported codecs',\n    getSupportedCodecsDisplayedValue(data.supportedCodecs),\n  ),\n  createData(\n    'Maximum quality for unprotected content (eg. Youtube)',\n    getMaxBandwidthDisplayedValue(data.unprotectedContentMaxBandwidth),\n  ),\n  createData(\n    'Maximum quality for protected content (eg. Netflix)',\n    getMaxBandwidthDisplayedValue(data.protectedContentMaxBandwidth),\n  ),\n  createData('Recommended browser', data.recommendedBrowser),\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n  const rows = getRows(props);\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Property</CustomTableCell>\n            <CustomTableCell>Value</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </CustomTableCell>\n                <CustomTableCell >{row.value || '...'}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  drmName: PropTypes.string,\n  drmSecurity: PropTypes.string,\n  drmCanPersistState: PropTypes.string,\n  hdcpLevel: PropTypes.string,\n  protectedContentMaxBandwidth: PropTypes.string,\n  unprotectedContentMaxBandwidth: PropTypes.string,\n  recommendedBrowser: PropTypes.string,\n};\n\nexport default withStyles(styles)(CustomizedTable);","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Table from '../presentationals/Table';\n\nconst TableContainer = props => <Table {...props}/>;\n\nfunction mapStateToProps(state) {\n  return {\n    drmName: state.drm.drmName,\n    drmSecurity: state.drm.drmSecurity,\n    drmCanPersistState: state.drm.drmCanPersistState,\n    hdcpLevel: state.drm.hdcpLevel,\n    protectedContentMaxBandwidth: state.maxBandwidth.protectedContent,\n    unprotectedContentMaxBandwidth: state.maxBandwidth.unprotectedContent,\n    recommendedBrowser: state.browser.recommended,\n    supportedCodecs: state.browser.supportedCodecs,\n  };\n} \n\nexport default connect(\n  mapStateToProps,\n)(TableContainer)\n","// All drm mimeType associated to the playready drm\n// This list is ordered from more secure to less secure\nconst PLAYREADY_DRM_MIME_TYPES = [\n  'com.microsoft.playready.hardware',\n  'com.chromecast.playready.hardware',\n  'com.youtube.playready.hardware',\n  'com.microsoft.playready.software',\n  'com.chromecast.playready.software',\n  'com.youtube.playready.software',\n  'com.microsoft.playready',\n  'com.chromecast.playready',\n  'com.youtube.playready',\n];\n\n// Robustnesses used by widevine\n// This list is ordered from more secure to less secure\nconst WIDEVINE_ROBUSTNESSES = [\n  'HW_SECURE_ALL',\n  'HW_SECURE_DECODE',\n  'HW_SECURE_CRYPTO',\n  'SW_SECURE_DECODE',\n  'SW_SECURE_CRYPTO',\n];\n\n// Existing HDCP levels\n// This list is ordered from more secure to less secure\nconst HDCP_LEVELS = [\n  '2.3',\n  '2.2',\n  '2.1',\n  '2.0',\n  '1.4',\n  '1.3',\n  '1.2',\n  '1.1',\n  '1.0',\n];\n\n// Drm attributes if drm detection fails\nconst FALLBACK_DRM_INFOS = {\n  drmName: 'none',\n  drmSecurity: 'none',\n  hdcpLevel: 'Unable to detect',\n}\n/**\n * RequestMediaKeySystemAccess with try catch logic\n * @export\n * @param {string} drmMimeType\n * @param {array} config\n * @returns {?object} mediaKeySystemAccess\n */\nexport async function requestMediaKeySystemAccess(drmMimeType, config) {\n  try {\n    return await navigator.requestMediaKeySystemAccess(drmMimeType, config);\n  } catch {\n    return null;\n  } \n}\n/**\n * Returns supported hdcp level if api is available\n * @export\n * @param {object} mediaKeys\n * @returns {?string} hdcpLevel\n */\nexport async function getHdcpLevelFromMediaKeys(mediaKeys) {\n  if (!('getStatusForPolicy' in mediaKeys)) return 'Unable to detect';\n\n  for (let i = 0; i < HDCP_LEVELS.length; i += 1) {\n    const hdcpLevel = HDCP_LEVELS[i];\n\n    try {\n      const status = await mediaKeys.getStatusForPolicy({ minHdcpVersion: `hdcp-${hdcpLevel}` });\n\n      if (status === 'usable') {\n        return hdcpLevel;\n      }\n    } catch (e) {\n      console.warn(`Error while detecting support for hdcp version: ${hdcpLevel}`, e);\n    }\n  }\n\n  return 'none';\n}\n\nexport async function getHdcpLevelFromMSMediaKeys() {\n  if (!window.MSMediaKeys) return 'none';\n\n  for (let i = 0; i < HDCP_LEVELS.length; i += 1) {\n    const hdcpLevel = HDCP_LEVELS[i];\n    const hdcpSupported = window.MSMediaKeys.isTypeSupportedWithFeatures(\n      'com.microsoft.playready',\n      `video/mp4;features=\"hdcp=${hdcpLevel}\"`\n    )\n\n    if (hdcpSupported === 'maybe') return hdcpLevel;\n  }\n}\n\n/**\n * Returns drm robustness list if appliable\n * @export\n * @param {string} drmName\n * @returns {array} robustnesses\n */\nexport function getDRMRobustnesses(drmName) {\n  // NOTE: For drms other than widevine, [undefined] is returned voluntarily\n  // for chromecast and playready drms\n  return drmName === 'widevine' ? WIDEVINE_ROBUSTNESSES : [undefined];\n}\n\n/**\n * Builds up the drm config object to be passed to requestMediaKeySystemAccess\n * @export\n * @param {string} drmName\n * @returns {array<object>} keySystemConfiguration\n */\nexport function getCencKeySystemConfigurations(drmName) {\n  const videoCapabilities = [];\n  const audioCapabilities = [];\n\n  const robustnesses = getDRMRobustnesses(drmName);\n\n  robustnesses.forEach((robustness) => {\n    videoCapabilities.push({\n      contentType: 'video/mp4;codecs=\"avc1.4d401e\"', // standard mp4 codec\n      robustness,\n    });\n    audioCapabilities.push({\n      contentType: 'audio/mp4;codecs=\"mp4a.40.2\"', // standard mp4 codec\n      robustness,\n    });\n  });\n\n  return [\n    {\n    initDataTypes: ['cenc'],\n    videoCapabilities,\n    audioCapabilities,\n    persistentState: 'required',\n    },\n    {\n      initDataTypes: ['cenc'],\n      videoCapabilities,\n      audioCapabilities,\n    }\n  ];\n}\n\n/**\n * Extract meaningful infos from detected playready drm capabilities\n * @export\n * @param {object} capabilities\n * @returns {object} drmInfo\n */\nexport function extractPlayreadyDrmInfoFromCapabilities(capabilities) {\n  return {\n    drmName: 'playready',\n    drmSecurity: capabilities.keySystem.includes('hardware') ? 'hardware' : 'software',\n    drmCanPersistState: capabilities.persistentState === 'required' ? 'yes' : 'no',\n    hdcpLevel: capabilities.hdcpLevel,\n  }\n}\n\n/**\n * Extract meaningful infos from detected widevine drm capabilities\n * @export\n * @param {object} capabilities\n * @returns {object} drmInfo\n */\nexport function extractWidevineDrmInfoFromCapabilities(capabilities) {\n  const isHardware = capabilities.videoCapabilities[0].robustness === 'HW_SECURE_ALL';\n\n  return {\n    drmName: 'widevine',\n    drmSecurity: isHardware ? 'hardware' : 'software',\n    drmCanPersistState: capabilities.persistentState === 'required' ? 'yes' : 'no',\n    hdcpLevel: capabilities.hdcpLevel,\n  }\n}\n\n/**\n * Get widevine capabilities\n * @export\n * @returns {object} capabilites\n */\nexport async function getWidevineCapabilites() {\n  const config = await getCencKeySystemConfigurations('widevine');\n  const ksAccess = await requestMediaKeySystemAccess('com.widevine.alpha', config);\n  \n  if (!ksAccess) return null;\n\n  const mediaKeys = await ksAccess.createMediaKeys();\n  const hdcpLevel = await getHdcpLevelFromMediaKeys(mediaKeys);\n\n  return { ...ksAccess, ...ksAccess.getConfiguration(), hdcpLevel };\n}\n\n/**\n * Get playready capabilities\n * @export\n * @returns {object} capabilites\n */\nexport async function getPlayreadyCapabilities() {\n  for (let i = 0; i < PLAYREADY_DRM_MIME_TYPES.length; i += 1) {\n    const config = await getCencKeySystemConfigurations('playready');\n    const drmMimeType = PLAYREADY_DRM_MIME_TYPES[i];\n    const ksAccess = await requestMediaKeySystemAccess(drmMimeType, config);\n\n    if (ksAccess) {\n      const mediaKeys = await ksAccess.createMediaKeys();\n      const hdcpLevelFromMediaKeys = await getHdcpLevelFromMediaKeys(mediaKeys);\n      const hdcpLevelFromMSMediaKeys = await getHdcpLevelFromMSMediaKeys();\n\n      return {\n        ...ksAccess,\n        ...ksAccess.getConfiguration(),\n        keySystem: drmMimeType,\n        hdcpLevel: hdcpLevelFromMediaKeys === 'none'\n          ? hdcpLevelFromMSMediaKeys\n          : hdcpLevelFromMSMediaKeys,\n      };\n    }\n  }\n\n  return null;\n}\n\n/**\n * Get fairplay info\n * @export\n * @returns {object} drmInfo\n */\nexport async function getFairplayInfos() {\n  const MK = window.WebKitMediaKeys;\n  const drm = 'com.apple.fps.1_0';\n  const isFairplaySupported = MK && MK.isTypeSupported && MK.isTypeSupported(drm, 'video/mp4');\n\n  if (!isFairplaySupported) return null;\n\n  return {\n    drmName: 'fairplay',\n    drmSecurity: 'hardware',\n    drmCanPersistState: 'yes',\n    hdcpLevel: 'Unable to detect',\n  }\n}\n\n/**\n * Get Cenc Info\n * @export\n * @returns {object} drmInfo\n */\nexport async function getCencInfos() {\n  const [playreadyCapabilities, widevineCapabilities]\n    = await Promise.all([getPlayreadyCapabilities(), getWidevineCapabilites()]);\n\n  if (playreadyCapabilities) {\n    return extractPlayreadyDrmInfoFromCapabilities(playreadyCapabilities);\n  } else if (widevineCapabilities) {\n    return extractWidevineDrmInfoFromCapabilities(widevineCapabilities);\n  }\n\n  return null;\n}\n\n/**\n * Get Drm Info\n * @export\n * @returns {object} drm capabilites\n */\nexport async function getDrmInfos() {\n  const fairplayInfos = await getFairplayInfos();\n\n  if (fairplayInfos) return fairplayInfos;\n\n  return await getCencInfos() || FALLBACK_DRM_INFOS;\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrmInfos } from '../../utils/drm';\n\nclass DrmDetector extends Component {\n  static propTypes = {\n    setDrmProperties: PropTypes.func.isRequired,\n  }\n\n  componentWillMount() {\n    this.detectDrmProperties();\n  }\n\n  async detectDrmProperties() {\n    const capabilities = await getDrmInfos();\n    \n    this.props.setDrmProperties(capabilities);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default DrmDetector;","import React from 'react'\nimport { connect } from 'react-redux'\nimport DrmDetector from '../presentationals/DrmDetector';\nimport { setDrmProperties } from '../../actions/drmActions';\n\nconst DrmDetectorContainer = props => <DrmDetector {...props}/>;\n\nexport default connect(\n  null,\n  { setDrmProperties },\n)(DrmDetectorContainer)\n","import { SET_DRM_PROPERTIES } from '../constants/actionTypes';\n\nexport function setDrmProperties(name) {\n  return {\n    type: SET_DRM_PROPERTIES,\n    payload: name,\n  };\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MaxBandwidthDetector extends Component {\n  static propTypes = {\n    drmName: PropTypes.string,\n    drmSecurity: PropTypes.string,\n    hdcpLevel: PropTypes.string,\n    drmCanPersistState: PropTypes.string,\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      drmName,\n      drmSecurity,\n      hdcpLevel,\n      drmCanPersistState,\n    } = this.props;\n\n    if (\n      drmName !== nextProps.drmName ||\n      drmSecurity !== nextProps.drmSecurity ||\n      hdcpLevel !== nextProps.hdcpLevel ||\n      drmCanPersistState !== nextProps.drmCanPersistState\n    ) {\n      const maxBandwidth = this.getMaxBandwidth(nextProps);\n      if (maxBandwidth) this.props.setMaxBandwidth(maxBandwidth);\n    }\n  }\n\n  getMaxBandwidth({ drmName, drmSecurity, hdcpLevel, drmCanPersistState }) {\n    if (!drmName || !drmSecurity || !hdcpLevel || !drmCanPersistState) return;\n\n    const maxBandwidth = {\n      unprotectedContent: '4k',\n      protectedContent: 'none',\n    }\n\n    if (drmCanPersistState === 'no') {\n      return maxBandwidth;\n    }\n    \n    switch (drmName) {\n      case 'fairplay':\n        return {\n          ...maxBandwidth,\n          protectedContent: '1080p',\n        }\n      case 'playready':\n        return {\n          ...maxBandwidth,\n          protectedContent: this.getPlayreadyProtectedContentMaxBandwidth(\n            drmSecurity, hdcpLevel,\n          ),\n        }\n      case 'widevine':\n        return {\n          ...maxBandwidth,\n          protectedContent: drmSecurity === 'hardware' ? '1080p' : '720p',\n        }\n      default:\n        return maxBandwidth;\n    }\n  }\n\n  getPlayreadyProtectedContentMaxBandwidth(drmSecurity, hdcpLevel) {\n    const [hdcpMajorLevel, hdcpMinorLevel] = hdcpLevel.split('.');\n\n    if (\n      drmSecurity === 'hardware' &&\n      (+hdcpMajorLevel >= 3 || (+hdcpMajorLevel === 2 && +hdcpMinorLevel >= 2))\n    ) {\n      return '4K';\n    }\n\n    return drmSecurity === 'hardware' ? '1080p' : '720p';\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default MaxBandwidthDetector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport MaxBandwidthDetector from '../presentationals/MaxBandwidthDetector';\nimport { setMaxBandwidth } from '../../actions/maxBandwidthActions';\n\nconst MaxBandwidthDetectorContainer = props => <MaxBandwidthDetector {...props}/>;\n\nconst mapStateToProps = (state) => ({\n  drmName: state.drm.drmName,\n  drmSecurity: state.drm.drmSecurity,\n  hdcpLevel: state.drm.hdcpLevel,\n  drmCanPersistState: state.drm.drmCanPersistState,\n});\n\nexport default connect(\n  mapStateToProps,\n  { setMaxBandwidth },\n)(MaxBandwidthDetectorContainer)\n","import { SET_MAX_BANDWIDTH } from '../constants/actionTypes';\n\nexport function setMaxBandwidth(name) {\n  return {\n    type: SET_MAX_BANDWIDTH,\n    payload: name,\n  };\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getBrowserProperties } from '../../utils/browser';\n\nclass BrowserDetector extends Component {\n  static propTypes = {\n    setBrowserProperties: PropTypes.func.isRequired,\n  }\n\n  componentWillMount() {\n    this.detectBrowserProperties();\n  }\n\n  async detectBrowserProperties() {\n    const properties = await getBrowserProperties();\n    \n    this.props.setBrowserProperties(properties);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default BrowserDetector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport BrowserDetector from '../presentationals/BrowserDetector';\nimport { setBrowserProperties } from '../../actions/browserActions';\n\nconst BrowserDetectorContainer = props => <BrowserDetector {...props}/>;\n\nexport default connect(\n  null,\n  { setBrowserProperties },\n)(BrowserDetectorContainer)\n","import { SET_BROWSER_PROPERTIES } from '../constants/actionTypes';\n\nexport function setBrowserProperties(properties) {\n  return {\n    type: SET_BROWSER_PROPERTIES,\n    payload: properties,\n  };\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport store from './ui/store';\nimport Table from './ui/components/containers/Table';\nimport DrmDetector from './ui/components/containers/DrmDetector';\nimport MaxBandwidthDetector from './ui/components/containers/MaxBandwidthDetector';\nimport BrowserDetector from './ui/components/containers/BrowserDetector';\n\nimport './App.css';\n\nconst styles = {\n  typography: {\n    margin: 'auto',\n  },\n}\n\nclass App extends Component {\n  render() {\n    const { classes: { typography } } = this.props;\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppBar position= 'sticky'>\n            <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" classes={{root: typography}}>\n              Video Capabilities Detector\n            </Typography>\n            </Toolbar>\n          </AppBar>\n          <Table />\n          <DrmDetector />\n          <MaxBandwidthDetector />\n          <BrowserDetector />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}